package userPackage.entities;

import java.util.ArrayList;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

@Entity
@Table(name = "customers")
public class Customer extends User {

    private boolean premiumSubscription;

    @ManyToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
    @JoinTable(name = "user_groups", joinColumns = {
        @JoinColumn(name = "user_id", referencedColumnName = "id", nullable = false, updatable =
            false)},
        inverseJoinColumns = {
        @JoinColumn(name = "group_id", referencedColumnName = "groupId", nullable = false,
            updatable = false)
    })
    private List<Group> groupsForTeamSports;



    public Customer() {

    }

    /**
     * Constructor without id (generated by Spring JPA).
     *
     * @param username            - String
     * @param password            - String
     * @param premiumSubscription - boolean
     */
    public Customer(String username, String password, boolean premiumSubscription) {
        super(username, password);
        this.premiumSubscription = premiumSubscription;
    }

    /**
     * Constructor with id.
     */
    public Customer(long id, String username, String password, boolean premiumSubscription,
                    List<Group> groupsForTeamSports) {
        super(id, username, password);
        this.premiumSubscription = premiumSubscription;
        this.groupsForTeamSports = groupsForTeamSports;
    }

    public boolean isPremiumUser() {
        return premiumSubscription;
    }

    public void setPremiumUser(boolean premiumUser) {
        this.premiumSubscription = premiumUser;
    }

    public List<Group> getGroupsForTeamSports() {
        return groupsForTeamSports;
    }

    public void setGroupsForTeamSports(List<Group> groupsForTeamSports) {
        this.groupsForTeamSports = groupsForTeamSports;
    }


    public boolean isPremiumSubscription() {
        return premiumSubscription;
    }

    public void setPremiumSubscription(boolean premiumSubscription) {
        this.premiumSubscription = premiumSubscription;
    }


    @Override
    public String toString() {
        return "Customer{" + "id=" + super.getId() + ", username='" + super.getUsername() + '\''
            + ", password" + "='" + super.getPassword();
    }

}
