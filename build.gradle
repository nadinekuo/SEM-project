buildscript {
    repositories {
        mavenCentral()
        //Needed only for SNAPSHOT versions
        //maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    }
}



plugins {
    id 'org.springframework.boot' version '2.4.1'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'

    id 'java'

    // Code style
    id 'checkstyle'

    // PMD
    id 'pmd'

    id 'info.solidsoft.pitest' version '1.5.2' apply false
}

allprojects {

    sourceCompatibility = '11'

    repositories {
        mavenCentral()
    }
}

subprojects {

    apply plugin: 'application'
    apply plugin: 'checkstyle'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'pmd'
    apply plugin: 'info.solidsoft.pitest'
    apply plugin: 'jacoco'


    group = 'nl.tudelft.sem'
    version = '0.1.0-SNAPSHOT'
    sourceCompatibility = 11
    targetCompatibility = 11

    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
    }

    pitest {
        junit5PluginVersion = '0.12'
        // noinspection all
        targetClasses = ['nl.tudelft.sem.*']
        pitestVersion = '1.5.1'
        // noinspection all
        threads = 4
        // noinspection all
        outputFormats = ['XML', 'HTML']
        // noinspection all
        timestampedReports = false
    }

    ext {
        set('springCloudVersion', "2020.0.0")
    }

    dependencies {
        implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

        //Spring
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-jpa
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.3.5.RELEASE'
        implementation 'org.springframework.boot:spring-boot-starter'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'

        testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
        testImplementation 'org.springframework.security:spring-security-test'

        implementation 'com.sun.jersey.contribs:jersey-apache-client4:1.19.4'

        //eureka
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'

        implementation 'com.sun.jersey.contribs:jersey-apache-client4:1.19.4'


        //tests
        implementation 'org.jetbrains:annotations:20.1.0'
        implementation 'junit:junit:4.12'

        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }

        testImplementation('org.junit.jupiter:junit-jupiter:5.5.2')
        testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.1.0'
        testImplementation('org.assertj:assertj-core:3.14.0')

        // Local test database (in-memory)
        implementation 'com.h2database:h2'
        developmentOnly 'org.hibernate:hibernate-entitymanager'
        runtimeOnly 'org.postgresql:postgresql'
    }

    test {
        useJUnitPlatform()

        jacoco {
            enabled = true
            includes = ['nl.tudelft.sem.*']
            excludes = []
        }
    }

    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
    }

    checkstyle {
        toolVersion "8.37"
        configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")

    }

    pmd {
        toolVersion = "6.23.0"
        ruleSetFiles = files("${rootDir}/config/pmd/pmd.xml")
        ruleSets = []
    }


    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    jacocoTestCoverageVerification() {
        // Ensure this works after testing.
        dependsOn test
        violationRules {
            rule {
                enabled = true
                element = 'CLASS'
                includes = ['nl.tudelft.sem.*']
                limit {
                    counter = 'BRANCH'
                    value = 'COVEREDRATIO'
                    minimum = 0.1
                }
            }
        }
    }




}

bootJar {
    enabled = false
}

jar {
    enabled = true
}
