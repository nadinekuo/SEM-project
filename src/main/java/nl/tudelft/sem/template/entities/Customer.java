package nl.tudelft.sem.template.entities;

import com.fasterxml.jackson.annotation.JsonManagedReference;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

@Entity
@Table(name = "customers")
public class Customer extends User {

    private boolean premiumSubscription;

    @ManyToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
    @JoinTable(name = "user_groups", joinColumns = {
        @JoinColumn(name = "user_id", referencedColumnName = "id", nullable = false, updatable =
            false)},
        inverseJoinColumns = {
        @JoinColumn(name = "group_id", referencedColumnName = "groupId", nullable = false,
            updatable = false)
    })
    private List<Group> groupsForTeamSports;

    @ManyToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
    @JoinTable(name = "lesson_attendees", joinColumns = {
        @JoinColumn(name = "user_id", referencedColumnName = "id", nullable = false, updatable =
            false)},
        inverseJoinColumns = {
        @JoinColumn(name = "lesson_id", referencedColumnName = "lessonId", nullable = false,
            updatable = false)
    })
    private List<Lesson> lessonsBooked;

    @ManyToMany(mappedBy = "borrowersQueued", fetch = FetchType.LAZY)
    @JsonManagedReference
    private List<Equipment> equipmentBorrowed;

    @ManyToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
    @JoinTable(name = "reservation_users", joinColumns = {
        @JoinColumn(name = "user_id", referencedColumnName = "id", nullable = false, updatable =
            false)},
        inverseJoinColumns = {
        @JoinColumn(name = "reservation_id", referencedColumnName = "reservationId", nullable =
            false, updatable = false)
    })
    private List<Reservation> reservations;

    public Customer() {

    }

    /**
     * Constructor without id (generated by Spring JPA).
     *
     * @param username            - String
     * @param password            - String
     * @param premiumSubscription - boolean
     */
    public Customer(String username, String password, boolean premiumSubscription) {
        super(username, password);
        this.premiumSubscription = premiumSubscription;
    }

    /**
     * Constructor with id.
     */
    public Customer(long id, String username, String password, boolean premiumSubscription,
                    List<Group> groupsForTeamSports, List<Lesson> lessonsBooked,
                    List<Equipment> equipmentBorrowed, List<Reservation> reservations) {
        super(id, username, password);
        this.premiumSubscription = premiumSubscription;
        this.groupsForTeamSports = groupsForTeamSports;
        this.lessonsBooked = lessonsBooked;
        this.equipmentBorrowed = equipmentBorrowed;
        this.reservations = reservations;
    }

    public boolean isPremiumUser() {
        return premiumSubscription;
    }

    public void setPremiumUser(boolean premiumUser) {
        this.premiumSubscription = premiumUser;
    }

    public List<Group> getGroupsForTeamSports() {
        return groupsForTeamSports;
    }

    public void setGroupsForTeamSports(List<Group> groupsForTeamSports) {
        this.groupsForTeamSports = groupsForTeamSports;
    }

    public List<Lesson> getLessonsBooked() {
        return lessonsBooked;
    }

    public void setLessonsBooked(List<Lesson> lessonsBooked) {
        this.lessonsBooked = lessonsBooked;
    }

    public List<Equipment> getEquipmentBorrowed() {
        return equipmentBorrowed;
    }

    public void setEquipmentBorrowed(List<Equipment> equipmentBorrowed) {
        this.equipmentBorrowed = equipmentBorrowed;
    }

    public List<Reservation> getReservations() {
        return reservations;
    }

    public void setReservations(List<Reservation> reservations) {
        this.reservations = reservations;
    }

    public boolean isPremiumSubscription() {
        return premiumSubscription;
    }

    public void setPremiumSubscription(boolean premiumSubscription) {
        this.premiumSubscription = premiumSubscription;
    }

    @Override
    public String toString() {
        return "Customer{" + "id=" + super.getId() + ", username='" + super.getUsername() + '\''
            + ", password" + "='" + super.getPassword();
    }

}
